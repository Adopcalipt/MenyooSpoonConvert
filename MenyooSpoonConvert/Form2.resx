<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +QAAAABJRU5ErkJggg==
</value>
  </data>
</root>